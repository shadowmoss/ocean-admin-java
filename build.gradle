buildscript{
    ext{
        springBootVersion = '2.7.14'
    }
    repositories {
        maven{
            url 'https://maven.aliyun.com/repository/gradle-plugin'
        }
    }
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:1.0.10.RELEASE"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}
apply plugin:"java"
apply plugin: 'org.springframework.boot'
apply plugin: "io.spring.dependency-management"


group 'com.ocean'
version '1.0-SNAPSHOT'
description("Ocean项目的根目录")
sourceCompatibility = "1.8"
targetCompatibility = "1.8"

ext{
    mybatisPlusVersion = '3.4.3'
    jwtVersion = "3.8.2"
    mysqlConnectorVersion = '8.0.27'
}
allprojects {
    repositories {
        maven{
            url "https://maven.aliyun.com/repository/public/"
        }
        maven{
            url "https://maven.aliyun.com/repository/gradle-plugin"
        }
    }
}
// 所有子项目的公共配置
subprojects {
    Project subproject->
        def springBootProject = ['ocean-web','ocean-application','ocean-system-impl','ocean-common','ocean-security']
        apply plugin: 'java'
        if(springBootProject.contains(subproject.name)){
            apply plugin: 'org.springframework.boot'
            apply plugin: "io.spring.dependency-management"
            dependencies {
                implementation "org.projectlombok:lombok"
                annotationProcessor "org.projectlombok:lombok"
            }
        }
}
// 子项目的特定配置
project(':ocean-components:ocean-web'){
    apply plugin: 'java-library'
    description("Ocean项目的Web组件，主要涉及Web项目的跨域配置、全局异常拦截、等等")
    dependencies {
        api "org.springframework.boot:spring-boot-starter-web"
    }
}
project('ocean-components:ocean-dil'){
    apply plugin: 'java-library'
    description("Ocean项目的数据交互层")
    dependencies {
        api 'com.baomidou:mybatis-plus-boot-starter:' + rootProject.ext.mybatisPlusVersion
        runtimeOnly 'mysql:mysql-connector-java:'+rootProject.ext.mysqlConnectorVersion
    }
}
project('ocean-system:ocean-system-impl'){
    apply plugin: 'java-library'
    dependencies {
        api project(':ocean-components:ocean-web')
        api project(':ocean-components:ocean-dil')
        implementation project(':ocean-components:ocean-common')
    }
}
project('ocean-components:ocean-common'){
}
project(':ocean-application'){
    apply plugin: 'java-library'
    dependencies {
        api project(':ocean-system:ocean-system-impl')
    }
}
project(':ocean-components:ocean-security'){
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-security'
    }
}